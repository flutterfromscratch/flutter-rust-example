// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.49.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'bridge_generated.io.dart'
    if (dart.library.html) 'bridge_generated.web.dart';
import 'package:meta/meta.dart';

class NativeImpl implements Native {
  final NativePlatform _platform;
  factory NativeImpl(ExternalLibrary dylib) =>
      NativeImpl.raw(NativePlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory NativeImpl.wasm(FutureOr<WasmModule> module) =>
      NativeImpl(module as ExternalLibrary);
  NativeImpl.raw(this._platform);
  Stream<BatteryUpdate> batteryEventStream({dynamic hint}) =>
      _platform.executeStream(FlutterRustBridgeTask(
        callFfi: (port_) => _platform.inner.wire_battery_event_stream(port_),
        parseSuccessData: _wire2api_battery_update,
        constMeta: kBatteryEventStreamConstMeta,
        argValues: [],
        hint: hint,
      ));

  FlutterRustBridgeTaskConstMeta get kBatteryEventStreamConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "battery_event_stream",
        argNames: [],
      );

  Future<bool> getBatteryStatus({dynamic hint}) =>
      _platform.executeNormal(FlutterRustBridgeTask(
        callFfi: (port_) => _platform.inner.wire_getBatteryStatus(port_),
        parseSuccessData: _wire2api_bool,
        constMeta: kGetBatteryStatusConstMeta,
        argValues: [],
        hint: hint,
      ));

  FlutterRustBridgeTaskConstMeta get kGetBatteryStatusConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "getBatteryStatus",
        argNames: [],
      );

  Future<void> init({dynamic hint}) =>
      _platform.executeNormal(FlutterRustBridgeTask(
        callFfi: (port_) => _platform.inner.wire_init(port_),
        parseSuccessData: _wire2api_unit,
        constMeta: kInitConstMeta,
        argValues: [],
        hint: hint,
      ));

  FlutterRustBridgeTaskConstMeta get kInitConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "init",
        argNames: [],
      );

// Section: wire2api

  BatteryUpdate _wire2api_battery_update(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 5)
      throw Exception('unexpected arr length: expect 5 but see ${arr.length}');
    return BatteryUpdate(
      chargeRatesInMilliwatts: _wire2api_opt_box_autoadd_i32(arr[0]),
      designCapacityInMilliwattHours: _wire2api_opt_box_autoadd_i32(arr[1]),
      fullChargeCapacityInMilliwattHours: _wire2api_opt_box_autoadd_i32(arr[2]),
      remainingCapacityInMilliwattHours: _wire2api_opt_box_autoadd_i32(arr[3]),
      status: _wire2api_charging_state(arr[4]),
    );
  }

  bool _wire2api_bool(dynamic raw) {
    return raw as bool;
  }

  int _wire2api_box_autoadd_i32(dynamic raw) {
    return raw as int;
  }

  ChargingState _wire2api_charging_state(dynamic raw) {
    return ChargingState.values[raw];
  }

  int _wire2api_i32(dynamic raw) {
    return raw as int;
  }

  int? _wire2api_opt_box_autoadd_i32(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_i32(raw);
  }

  void _wire2api_unit(dynamic raw) {
    return;
  }
}

// Section: api2wire
