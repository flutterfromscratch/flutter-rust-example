// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.49.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

abstract class Native {
  Stream<BatteryUpdate> batteryEventStream({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kBatteryEventStreamConstMeta;

  Future<bool> getBatteryStatus({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetBatteryStatusConstMeta;

  Future<void> init({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kInitConstMeta;
}

class BatteryUpdate {
  final int? chargeRatesInMilliwatts;
  final int? designCapacityInMilliwattHours;
  final int? fullChargeCapacityInMilliwattHours;
  final int? remainingCapacityInMilliwattHours;
  final ChargingState status;

  BatteryUpdate({
    this.chargeRatesInMilliwatts,
    this.designCapacityInMilliwattHours,
    this.fullChargeCapacityInMilliwattHours,
    this.remainingCapacityInMilliwattHours,
    required this.status,
  });
}

enum ChargingState {
  Charging,
  Discharging,
  Idle,
  NotPresent,
  Unknown,
}
